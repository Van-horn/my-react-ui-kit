{"version":3,"file":"components-Buttons-FilledButton-FilledButton-stories.6b85c4da.iframe.bundle.js","mappings":";;;AAYA;;ACLA;;AAIA;;;;ACqBA;;;;AAKA;;AAIA","sources":["webpack://my-react-ui-kit/./src/shared-data-for-styles/TAB-on-element/reaction-options.ts","webpack://my-react-ui-kit/./src/shared-data-for-styles/hover-on-element/reaction-options.ts","webpack://my-react-ui-kit/./src/components/Buttons/FilledButton/FilledButton.tsx"],"sourcesContent":["import { css, Interpolation } from \"styled-components\"\r\n\r\nexport interface I_TAB_reactionOptions {\r\n\tzoom: Interpolation<Record<never, never>>\r\n\tnone: Interpolation<Record<never, never>>\r\n}\r\n\r\nexport const TAB_reactionOptions: I_TAB_reactionOptions = {\r\n\tzoom: css`\r\n\t\toutline: none;\r\n\t\ttransform: scale(1.1);\r\n\t`,\r\n\tnone: css`\r\n\t\toutline: none;\r\n\t`,\r\n}\r\n","import { css, Interpolation } from \"styled-components\"\r\n\r\nexport interface I_hover_reactionOptions {\r\n\tblackout: Interpolation<Record<never, never>>\r\n\tnone: Interpolation<Record<never, never>>\r\n}\r\n\r\nexport const hover_reactionOptions: I_hover_reactionOptions = {\r\n\tblackout: css`\r\n\t\t// filter: background-color: rgba(0, 0, 0, 0.01);\r\n\t`,\r\n\tnone: css``,\r\n}\r\n","import React from \"react\"\r\nimport { ButtonHTMLAttributes, memo, FC } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport {\r\n\tI_TAB_reactionOptions,\r\n\tTAB_reactionOptions,\r\n} from \"../../../shared-data-for-styles/TAB-on-element/reaction-options\"\r\nimport {\r\n\tI_hover_reactionOptions,\r\n\thover_reactionOptions,\r\n} from \"../../../shared-data-for-styles/hover-on-element/reaction-options\"\r\n\r\nnamespace IButtonStyles {\r\n\texport interface IStyles extends React.CSSProperties {\r\n\t\thover_reaction?: keyof I_hover_reactionOptions\r\n\t\tTAB_reaction?: keyof I_TAB_reactionOptions\r\n\t}\r\n}\r\n\r\nexport interface FilledButtonProps\r\n\textends ButtonHTMLAttributes<HTMLButtonElement> {\r\n\tlabel: string\r\n\tstyles?: IButtonStyles.IStyles\r\n}\r\n\r\nconst Button = styled.button.withConfig({\r\n\tshouldForwardProp: (prop) => ![\"styles\", \"label\"].includes(prop),\r\n})<FilledButtonProps>`\r\n\tcursor: pointer;\r\n\tcolor: inherit;\r\n\t&:hover {\r\n\t\t${(props) =>\r\n\t\t\thover_reactionOptions[props?.styles?.hover_reaction ?? \"none\"]}\r\n\t}\r\n\r\n\t&:focus-visible {\r\n\t\t${(props) => TAB_reactionOptions[props?.styles?.TAB_reaction ?? \"none\"]}\r\n\t}\r\n`\r\n\r\nconst FilledButton: FC<FilledButtonProps> = (props) => {\r\n\treturn <Button {...props}>{props.label}</Button>\r\n}\r\n\r\nexport default memo(FilledButton)"],"names":[],"sourceRoot":""}