{"version":3,"file":"components-Inputs-Multi-part-HintBorder-index-stories.277c42ac.iframe.bundle.js","mappings":";AAmCA;AAOA;AAMA;AAyBA;AAGA;AAYA","sources":["webpack://my-react-ui-kit/./src/components/Inputs/Multi-part/HintBorder/index.tsx"],"sourcesContent":["import React, { InputHTMLAttributes } from \"react\"\r\nimport { memo, FC } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport ResetCss from \"../../../../reset.js\"\r\nimport {\r\n\tIRoundingOptions,\r\n\troundingOptions,\r\n} from \"../../../../shared-data-for-styles/element-rounding\"\r\n\r\ninterface SpeciaStyles {\r\n\tthemeColor?: string\r\n\tinvalidColor?: string\r\n\trounding?: keyof IRoundingOptions\r\n}\r\n\r\nexport interface HintBorderInputProps\r\n\textends InputHTMLAttributes<HTMLInputElement>,\r\n\t\tSpeciaStyles {\r\n\twidth?: number\r\n\theight?: number\r\n}\r\n\r\ninterface DivProps {\r\n\twidth: number\r\n\theight: number\r\n}\r\ninterface LabelProps {\r\n\tthemeColor: string\r\n\theight: number\r\n}\r\n\r\nconst Div = styled.div.withConfig({\r\n\tshouldForwardProp: (prop) => prop === \"children\",\r\n})<DivProps>`\r\n\t${(props) => `\r\n\tposition: relative;\r\n\twidth: ${props?.width ?? 13}em;\r\n\theight: ${props?.height ?? 2.5}em; \r\n`}\r\n`\r\n\r\nconst Input = styled.input.withConfig({\r\n\tshouldForwardProp: (prop) =>\r\n\t\t![\"width\", \"height\", \"rounding\", \"invalidColor\", \"themeColor\"].includes(\r\n\t\t\tprop,\r\n\t\t),\r\n})<HintBorderInputProps>`\r\n\t${(props) => `\r\n\t\tborder: 0.149em solid ${props?.themeColor ?? \"black\"};\r\n\t\tpadding: 0em 0.5em;\r\n\t\twidth: inherit;\r\n\t\theight: inherit;\r\n\t\tfont-size: ${props?.height ? props.height / 2.4 : 1.1}em;\r\n\t\tborder-radius: ${props?.height && props?.rounding ? props.height * roundingOptions[props.rounding] : 0}em;\r\n\t\t&:user-invalid {\r\n\t\t\tborder-color: ${props?.invalidColor ?? \"red\"};\r\n\t\t}\r\n\t\t&:not(:placeholder-shown) + label{\r\n\t\t\tvisibility: visible;\r\n\t\t\ttop: -0.56em;\r\n\t\t\tleft: 1.5em;  \r\n\t\t\ttransform: scale(0.95);\r\n\t\t\topacity: 1;\r\n\t\t\tbackground-color: white;\r\n\t\t\tborder: 0.11em solid white;\r\n\t\t\tborder-top: none;\r\n\t\t\tborder-bottom: none;\r\n\t\t\ttransition: all 0.23s ease, opacity 0.1s ease, border 1ms ease;\r\n\t\t}\r\n\t\t`}\r\n`\r\n\r\nconst Label = styled.label.withConfig({\r\n\tshouldForwardProp: (prop) => prop === \"children\",\r\n})<LabelProps>`\r\n\t${(props) => `\r\n\t\tposition: absolute;\r\n\t\tvisibility: hidden;\r\n\t\tleft : 0.64em;\r\n\t\ttop: 0.59em;\r\n\t\ttransform: scale(1);\r\n\t\topacity: 0;\r\n\t\tcolor: ${props.themeColor};\r\n\t\tfont-size: ${props.height}em;\r\n\t\t`}\r\n`\r\n\r\nconst HintBorderInput: FC<HintBorderInputProps> = memo((props) => {\r\n\tconst classes = [props?.className ?? \"\"].join(\" \")\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ResetCss />\r\n\t\t\t<Div width={props?.width ?? 13} height={props?.height ?? 2.5}>\r\n\t\t\t\t<Input {...props} className={classes} />\r\n\t\t\t\t<Label\r\n\t\t\t\t\tthemeColor={props?.themeColor ?? \"black\"}\r\n\t\t\t\t\theight={props?.height ? props.height / 2.3 : 1.1}>\r\n\t\t\t\t\t{props?.placeholder ?? \"\"}\r\n\t\t\t\t</Label>\r\n\t\t\t</Div>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default HintBorderInput\r\n"],"names":[],"sourceRoot":""}