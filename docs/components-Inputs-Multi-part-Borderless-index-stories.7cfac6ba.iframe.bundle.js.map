{"version":3,"file":"components-Inputs-Multi-part-Borderless-index-stories.7cfac6ba.iframe.bundle.js","mappings":";AA8BA;AAOA;AAIA;AAsBA;AAGA;AAYA","sources":["webpack://my-react-ui-kit/./src/components/Inputs/Multi-part/Borderless/index.tsx"],"sourcesContent":["import React, { InputHTMLAttributes } from \"react\"\r\nimport { memo, FC } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport ResetCss from \"../../../../reset\"\r\n\r\ninterface SpeciaStyles {\r\n\tthemeColor?: string\r\n\tinvalidColor?: string\r\n}\r\n\r\nexport interface BorderlessProps\r\n\textends InputHTMLAttributes<HTMLInputElement>,\r\n\t\tSpeciaStyles {\r\n\twidth?: number\r\n\theight?: number\r\n}\r\n\r\ninterface DivProps {\r\n\twidth: number\r\n\theight: number\r\n}\r\ninterface LabelProps {\r\n\tthemeColor: string\r\n\theight: number\r\n}\r\n\r\nconst Div = styled.div.withConfig({\r\n\tshouldForwardProp: (prop) => prop === \"children\",\r\n})<DivProps>`\r\n\t${(props) => `\r\n\tposition: relative;\r\n\twidth: ${props.width}em;\r\n\theight: ${props.height}em; \r\n`}\r\n`\r\n\r\nconst Input = styled.input.withConfig({\r\n\tshouldForwardProp: (prop) =>\r\n\t\t![\"width\", \"height\", \"invalidColor\", \"themeColor\"].includes(prop),\r\n})<BorderlessProps>`\r\n\t${(props) => `\r\n\t\tborder: none ;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder-radius: 0;\r\n\t\tbackground-color: transparent;\r\n\t\tborder-bottom: 0.15em solid ${props?.themeColor ?? \"black\"};\r\n\t\tfont-size: ${props?.height ? props.height / 2.4 : 1.1}em;\r\n\t\t&:user-invalid {\r\n\t\t\tborder-color: ${props?.invalidColor ?? \"red\"};\r\n\t\t}\r\n\t\t&:not(:placeholder-shown) + label{\r\n\t\t\tvisibility: visible;\r\n\t\t\ttop: -0.7em;\r\n\t\t\tleft: -0.05em;  \r\n\t\t\ttransform: scale(0.95);\r\n\t\t\topacity: 1;\r\n\t\t\ttransition: all 0.23s ease, opacity 0.1s ease;\r\n\t\t}\r\n\t\t`}\r\n`\r\n\r\nconst Label = styled.label.withConfig({\r\n\tshouldForwardProp: (prop) => prop === \"children\",\r\n})<LabelProps>`\r\n\t${(props) => `\r\n\t\tposition: absolute;\r\n\t\tvisibility: hidden;\r\n\t\tleft : -0.05em;\r\n\t\ttop: 0.59em;\r\n\t\ttransform: scale(1);\r\n\t\topacity: 0;\r\n\t\tcolor: ${props.themeColor};\r\n\t\tfont-size: ${props.height}em;\r\n\t\t`}\r\n`\r\n\r\nconst BorderlessInput: FC<BorderlessProps> = memo((props) => {\r\n\tconst classes = [props?.className ?? \"\"].join(\" \")\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ResetCss />\r\n\t\t\t<Div width={props?.width ?? 13} height={props?.height ?? 2.5}>\r\n\t\t\t\t<Input {...props} className={classes} />\r\n\t\t\t\t<Label\r\n\t\t\t\t\tthemeColor={props?.themeColor ?? \"black\"}\r\n\t\t\t\t\theight={props?.height ? props.height / 2.3 : 1.1}>\r\n\t\t\t\t\t{props?.placeholder ?? \"\"}\r\n\t\t\t\t</Label>\r\n\t\t\t</Div>\r\n\t\t</>\r\n\t)\r\n})\r\n\r\nexport default BorderlessInput\r\n"],"names":[],"sourceRoot":""}