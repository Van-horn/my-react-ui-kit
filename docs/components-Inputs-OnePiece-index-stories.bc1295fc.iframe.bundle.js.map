{"version":3,"file":"components-Inputs-OnePiece-index-stories.bc1295fc.iframe.bundle.js","mappings":";;;;;;AAaA;;;;;;AAQA;ACyBA;AASA;AAGA;AAeA","sources":["webpack://my-react-ui-kit/./src/shared-data-for-styles/icons-for-input/Password.tsx","webpack://my-react-ui-kit/./src/components/Inputs/OnePiece/index.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { IconsProps } from \".\";\r\n\r\nconst StyledBsEyeSlash = styled(BsEyeSlash)<Record<never, never>>`\r\n   font: inherit;\r\n   font-size: 115%;\r\n   position: absolute;\r\n   right: 1em;\r\n   cursor: pointer;\r\n`;\r\nconst StyledBsEye = styled(BsEye)<Record<never, never>>`\r\n   font: inherit;\r\n   font-size: 115%;\r\n   position: absolute;\r\n   right: 1em;\r\n   cursor: pointer;\r\n`;\r\n\r\nconst Spinner: FC<IconsProps> = ({ iconState, onIconClick }) => {\r\n   return iconState ? (\r\n      <StyledBsEyeSlash onClick={onIconClick} />\r\n   ) : (\r\n      <StyledBsEye onClick={onIconClick} />\r\n   );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { InputHTMLAttributes, MouseEventHandler } from \"react\";\r\nimport { memo, FC } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ResetCss from \"../../../reset\";\r\nimport {\r\n   IRoundingOptions,\r\n   roundingOptions,\r\n} from \"../../../shared-data-for-styles/element-rounding\";\r\nimport overrideObjProps from \"../../../utils/overrideObjProps\";\r\nimport IconsForInput, {\r\n   IIconsForInput,\r\n} from \"../../../shared-data-for-styles/icons-for-input\";\r\n\r\ninterface SpeciaStyles {\r\n   themeColor: string;\r\n   invalidColor: string;\r\n   rounding: keyof IRoundingOptions;\r\n   width: number;\r\n   height: number;\r\n   icon: keyof IIconsForInput;\r\n   iconState: boolean;\r\n   onIconClick: MouseEventHandler;\r\n}\r\n\r\nexport interface OnePieceInputProps\r\n   extends InputHTMLAttributes<HTMLInputElement>,\r\n      SpeciaStyles {\r\n   width: number;\r\n   height: number;\r\n}\r\n\r\nconst initProps: SpeciaStyles = {\r\n   themeColor: \"rgb(200, 200, 200)\",\r\n   invalidColor: \"red\",\r\n   rounding: \"none\",\r\n   width: 13,\r\n   height: 2.5,\r\n   icon: \"none\",\r\n   iconState: false,\r\n   onIconClick: () => {},\r\n};\r\n\r\nconst StyledDiv = styled.div.withConfig({\r\n   shouldForwardProp: (prop) => !Object.keys(initProps).includes(prop),\r\n})<SpeciaStyles>`\r\n   ${({ height, themeColor }) => `\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n  \t\talign-items: safe center;\r\n\t\tcolor: ${themeColor};\r\n\t\tfont-size: ${height / 2.5}em;\r\n\t`}\r\n`;\r\n\r\nconst Input = styled.input.withConfig({\r\n   shouldForwardProp: (prop) => !Object.keys(initProps).includes(prop),\r\n})<SpeciaStyles>`\r\n   ${({ themeColor, width, height, rounding, invalidColor, icon }) => `\r\n\t\tpadding: 0em 0.5em;\r\n\t\tfont-size: inherit;\r\n\t\theight: ${height}em;\r\n\t\tpadding-right: ${icon !== initProps.icon ? 2.7 : 0.5}em;\r\n\t\tborder: 0.15em solid ${themeColor};\r\n\t\twidth: ${width}em;\r\n\t\tborder-radius: ${height * roundingOptions[rounding]}em;\r\n\r\n\t\t&:user-invalid {\r\n\t\t\tborder-color: ${invalidColor};\r\n\t\t}\r\n\t\t`}\r\n`;\r\n\r\nconst OnePieceInput: FC<Partial<OnePieceInputProps>> = memo((props) => {\r\n   const classes = [props?.className ?? \"\"].join(\" \");\r\n\r\n   const processedProps = overrideObjProps<SpeciaStyles, Partial<SpeciaStyles>>(\r\n      initProps,\r\n      props,\r\n   );\r\n\r\n   return (\r\n      <>\r\n         <ResetCss />\r\n         <StyledDiv {...processedProps}>\r\n            <Input {...processedProps} className={classes} />\r\n            {props?.icon\r\n               ? IconsForInput[props.icon]({\r\n                    iconState: props?.iconState ?? initProps.iconState,\r\n                    onIconClick: props?.onIconClick ?? initProps.onIconClick,\r\n                 })\r\n               : IconsForInput[initProps.icon]({\r\n                    iconState: initProps.iconState,\r\n                    onIconClick: initProps.onIconClick,\r\n                 })}\r\n         </StyledDiv>\r\n      </>\r\n   );\r\n});\r\n\r\nexport default OnePieceInput;\r\n"],"names":[],"sourceRoot":""}